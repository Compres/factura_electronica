

var net_fuel_tally = 0;
var net_goods_tally = 0;
var net_services_tally = 0;
var sales_tax_temp = 12;

frappe.ui.form.on("Sales Invoice", "onload_post_render", function (frm) {});

frappe.ui.form.on("Sales Invoice", {
				customer: function customer(frm) {},
				onload: function onload(frm) {},

				items: function items(frm) {
								console.log("Items have been updated, showing this!");
				}
});

frappe.ui.form.on("Sales Invoice Item", {
				fieldname_add: function fieldname_add(frm, cdt, cdn) {},

				fieldname_move: function fieldname_move(frm, cdt, cdn) {},
				fieldname_before_remove: function fieldname_before_remove(frm, cdt, cdn) {},
				fieldname_remove: function fieldname_remove(frm, cdt, cdn) {},

				onload: function onload(frm, cdt, cdn) {},

				refresh: function refresh(frm, cdt, cdn) {
								console.log("Fields were refreshed");
				},
				item_code: function item_code(frm, cdt, cdn) {
								this_company_sales_tax_var = cur_frm.doc.taxes[0].rate;
								console.log("If you can see this, tax rate variable now exists, and its set to: " + this_company_sales_tax_var);
								frappe.run_serially([]);
				},

				qty: function qty(frm, cdt, cdn) {

								var this_row_qty, this_row_rate, this_row_amount, this_row_conversion_factor, this_row_stock_qty, this_row_tax_rate, this_row_tax_amount, this_row_taxable_amount;

								frm.doc.items.forEach(function (item_row, index) {
												if (item_row.name == cdn) {
																this_row_amount = item_row.qty * item_row.rate;
																this_row_stock_qty = item_row.qty * item_row.conversion_factor;
																this_row_tax_rate = item_row.tax_rate_per_uom;
																this_row_tax_amount = this_row_stock_qty * this_row_tax_rate;
																this_row_taxable_amount = this_row_amount - this_row_tax_amount;

																frm.doc.items[index].other_tax_amount = (item_row.tax_rate_per_uom * (item_row.qty * item_row.conversion_factor)).toFixed(2);
																frm.doc.items[index].amount_minus_excise_tax = (item_row.qty * item_row.rate - item_row.qty * item_row.conversion_factor * item_row.tax_rate_per_uom).toFixed(2);

																if (item_row.is_fuel == 1) {
																				frm.doc.items[index].gt_tax_net_fuel_amt = ((item_row.qty * item_row.rate - item_row.qty * item_row.conversion_factor * item_row.tax_rate_per_uom) / (1 + this_company_sales_tax_var / 100)).toFixed(2);
																};
																if (item_row.is_good == 1) {
																				frm.doc.items[index].gt_tax_net_goods_amt = ((item_row.qty * item_row.rate - item_row.qty * item_row.conversion_factor * item_row.tax_rate_per_uom) / (1 + this_company_sales_tax_var / 100)).toFixed(2);
																};
																if (item_row.is_service == 1) {
																				frm.doc.items[index].gt_tax_net_services_amt = ((item_row.qty * item_row.rate - item_row.qty * item_row.conversion_factor * item_row.tax_rate_per_uom) / (1 + this_company_sales_tax_var / 100)).toFixed(2);
																};
												};
								});

								frappe.run_serially([function () {
												frm.doc.items.forEach(function (item_row, index) {
																if (item_row.name == cdn) {}
												});
								}]);
				},
				uom: function uom(frm, cdt, cdn) {
								console.log("The unit of measure field was changed and the code from the trigger was run");
				},
				conversion_factor: function conversion_factor(frm, cdt, cdn) {
								console.log("El disparador de factor de conversión se corrió.");
				}
});

frappe.ui.form.on("Sales Invoice", "refresh", function (frm) {
				cur_frm.add_fetch("customer", "nit_face_customer", "nit_face_customer");

				function pdf_button() {
								frappe.call({
												method: "factura_electronica.api.save_url_pdf",

												callback: function callback(data) {

																if (data.message === 'Manual') {
																				console.log(data.message);
																				frm.add_custom_button(__("Obtener PDF"), function () {
																								var cae_fac = frm.doc.cae_factura_electronica;
																								var link_cae_pdf = "https://www.ingface.net/Ingfacereport/dtefactura.jsp?cae=";

																								window.open(link_cae_pdf + cae_fac);
																				}).addClass("btn-primary");
																} else {
																				console.log(data.message);
																				var cae_fac = frm.doc.cae_factura_electronica;
																				var link_cae_pdf = "https://www.ingface.net/Ingfacereport/dtefactura.jsp?cae=";

																				frappe.call({
																								method: "factura_electronica.api.save_pdf_server",
																								args: {
																												file_url: link_cae_pdf + cae_fac,
																												filename: frm.doc.name,
																												dt: 'Sales Invoice',
																												dn: frm.doc.name,
																												folder: 'Home/Facturas Electronicas',
																												is_private: 1
																								}
																				});
																}
												}
								});
				}

				if (frm.doc.status === "Paid" || frm.doc.status === "Unpaid" || frm.doc.status === "Submitted" || frm.doc.status === "Overdue") {
								if (frm.doc.cae_factura_electronica) {
												cur_frm.clear_custom_buttons();
												pdf_button();
								} else {
												var nombre = 'Factura Electronica';
												frm.add_custom_button(__(nombre), function () {
																frappe.call({
																				method: "factura_electronica.api.generar_factura_electronica",
																				args: {
																								serie_factura: frm.doc.name,
																								nombre_cliente: frm.doc.customer
																				},

																				callback: function callback(data) {
																								cur_frm.set_value("cae_factura_electronica", data.message);
																								if (frm.doc.cae_factura_electronica) {
																												cur_frm.clear_custom_buttons();
																												pdf_button();
																								}
																				}
																});
												}).addClass("btn-primary");
								}
				}

				if (frm.doc.status === "Return") {
								if (frm.doc.cae_nota_de_credito) {
												cur_frm.clear_custom_buttons();
												pdf_button();
								} else {
												frm.add_custom_button(__('Nota Credito'), function () {
																frappe.call({
																				method: "factura_electronica.api.generar_factura_electronica",
																				args: {
																								serie_factura: frm.doc.name,
																								nombre_cliente: frm.doc.customer
																				},

																				callback: function callback(data) {
																								cur_frm.set_value("cae_nota_de_credito", data.message);
																								if (frm.doc.cae_nota_de_credito) {
																												cur_frm.clear_custom_buttons();
																												pdf_button();
																								}
																				}
																});
												}).addClass("btn-primary");
								}
				}
});