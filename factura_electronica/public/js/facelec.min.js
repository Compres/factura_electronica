

facelec_tax_calculation = function facelec_tax_calculation(frm, cdt, cdn) {

    refresh_field('items');

    var this_row_qty, this_row_rate, this_row_amount, this_row_conversion_factor, this_row_stock_qty, this_row_tax_rate, this_row_tax_amount, this_row_taxable_amount;

    frm.doc.items.forEach(function (item_row, index) {
        if (item_row.name == cdn) {
            this_row_amount = item_row.qty * item_row.rate;
            this_row_stock_qty = item_row.qty * item_row.conversion_factor;
            this_row_tax_rate = item_row.facelec_tax_rate_per_uom;
            this_row_tax_amount = this_row_stock_qty * this_row_tax_rate;
            this_row_taxable_amount = this_row_amount - this_row_tax_amount;

            frm.doc.items[index].facelec_other_tax_amount = (item_row.facelec_tax_rate_per_uom * (item_row.qty * item_row.conversion_factor)).toFixed(2);
            frm.doc.items[index].facelec_amount_minus_excise_tax = (item_row.qty * item_row.rate - item_row.qty * item_row.conversion_factor * item_row.facelec_tax_rate_per_uom).toFixed(2);

            if (item_row.factelecis_fuel == 1) {
                frm.doc.items[index].facelec_gt_tax_net_fuel_amt = ((item_row.qty * item_row.rate - item_row.qty * item_row.conversion_factor * item_row.facelec_tax_rate_per_uom) / (1 + this_company_sales_tax_var / 100)).toFixed(2);

                frm.doc.items[index].facelec_sales_tax_for_this_row = item_row.qty * item_row.rate - item_row.qty * item_row.conversion_factor * item_row.facelec_tax_rate_per_uom - (item_row.qty * item_row.rate - item_row.qty * item_row.conversion_factor * item_row.facelec_tax_rate_per_uom) / (1 + this_company_sales_tax_var / 100);

                total_fuel = 0;
                $.each(frm.doc.items || [], function (i, d) {
                    if (d.factelecis_fuel == true) {
                        total_fuel += flt(d.facelec_gt_tax_net_fuel_amt);
                    };
                });
                console.log("El total de fuel es:" + total_fuel);
                frm.doc.facelec_gt_tax_fuel = total_fuel;
            };
            if (item_row.facelec_is_good == 1) {
                frm.doc.items[index].facelec_gt_tax_net_goods_amt = ((item_row.qty * item_row.rate - item_row.qty * item_row.conversion_factor * item_row.facelec_tax_rate_per_uom) / (1 + this_company_sales_tax_var / 100)).toFixed(2);

                frm.doc.items[index].facelec_sales_tax_for_this_row = item_row.qty * item_row.rate - item_row.qty * item_row.conversion_factor * item_row.facelec_tax_rate_per_uom - (item_row.qty * item_row.rate - item_row.qty * item_row.conversion_factor * item_row.facelec_tax_rate_per_uom) / (1 + this_company_sales_tax_var / 100);

                total_goods = 0;
                $.each(frm.doc.items || [], function (i, d) {
                    if (d.facelec_is_good == true) {
                        total_goods += flt(d.facelec_gt_tax_net_goods_amt);
                    };
                });
                console.log("El total de bienes es:" + total_goods);
                frm.doc.facelec_gt_tax_goods = total_goods;
            };
            if (item_row.facelec_is_service == 1) {
                frm.doc.items[index].facelec_gt_tax_net_services_amt = ((item_row.qty * item_row.rate - item_row.qty * item_row.conversion_factor * item_row.facelec_tax_rate_per_uom) / (1 + this_company_sales_tax_var / 100)).toFixed(2);

                frm.doc.items[index].facelec_sales_tax_for_this_row = item_row.qty * item_row.rate - item_row.qty * item_row.conversion_factor * item_row.facelec_tax_rate_per_uom - (item_row.qty * item_row.rate - item_row.qty * item_row.conversion_factor * item_row.facelec_tax_rate_per_uom) / (1 + this_company_sales_tax_var / 100);
                total_servi = 0;
                $.each(frm.doc.items || [], function (i, d) {
                    if (d.facelec_is_service == true) {
                        total_servi += flt(d.facelec_gt_tax_net_services_amt);
                    };
                });
                console.log("El total de servicios es:" + total_servi);
                frm.doc.facelec_gt_tax_services = total_servi;
            };

            full_tax_iva = 0;
            $.each(frm.doc.items || [], function (i, d) {
                full_tax_iva += flt(d.facelec_sales_tax_for_this_row);
            });
            console.log("El total de IVA" + full_tax_iva);
            frm.doc.facelec_total_iva = full_tax_iva;
        };
    });
};

frappe.ui.form.on("Sales Invoice Item", {

    items_add: function items_add(frm, cdt, cdn) {
        console.log('Trigger add en tabla hija');
    },
    items_move: function items_move(frm, cdt, cdn) {
        console.log('Trigger move en tabla hija');
    },
    before_items_remove: function before_items_remove(frm, cdt, cdn) {},
    items_remove: function items_remove(frm, cdt, cdn) {
        console.log('Trigger remove en tabla hija');

        fix_gt_tax_fuel = 0;
        fix_gt_tax_goods = 0;
        fix_gt_tax_services = 0;
        fix_gt_tax_iva = 0;

        $.each(frm.doc.items || [], function (i, d) {

            fix_gt_tax_fuel += flt(d.facelec_gt_tax_net_fuel_amt);
            fix_gt_tax_goods += flt(d.facelec_gt_tax_net_goods_amt);
            fix_gt_tax_services += flt(d.facelec_gt_tax_net_services_amt);
            fix_gt_tax_iva += flt(d.facelec_sales_tax_for_this_row);
        });

        cur_frm.set_value("facelec_gt_tax_fuel", fix_gt_tax_fuel);
        cur_frm.set_value("facelec_gt_tax_goods", fix_gt_tax_goods);
        cur_frm.set_value("facelec_gt_tax_services", fix_gt_tax_services);
        cur_frm.set_value("facelec_total_iva", fix_gt_tax_iva);
    },
    item_code: function item_code(frm, cdt, cdn) {
        this_company_sales_tax_var = cur_frm.doc.taxes[0].rate;
        console.log("If you can see this, tax rate variable now exists, and its set to: " + this_company_sales_tax_var);

        frappe.run_serially([function () {
            console.log('item code activado');
        }, function () {
            console.log('muestra 2');
        }, function () {
            frm.doc.items.forEach(function (item_row, index) {
                if (item_row.name == cdn) {
                    console.log(item_row.qty);
                    console.log(item_row.rate);
                    console.log(frm.doc.items.qty);
                }
            });
        }]);
    },
    qty: function qty(frm, cdt, cdn) {
        facelec_tax_calculation(frm, cdt, cdn);
    },
    uom: function uom(frm, cdt, cdn) {
        console.log("The unit of measure field was changed and the code from the trigger was run");
        facelec_tax_calculation(frm, cdt, cdn);
    },
    conversion_factor: function conversion_factor(frm, cdt, cdn) {
        console.log("El disparador de factor de conversión se corrió.");
        facelec_tax_calculation(frm, cdt, cdn);
    },
    facelec_tax_rate_per_uom_account: function facelec_tax_rate_per_uom_account(frm, cdt, cdn) {},
    rate: function rate(frm, cdt, cdn) {
        facelec_tax_calculation(frm, cdt, cdn);
    }
});

frappe.ui.form.on("Sales Invoice", "refresh", function (frm) {
    cur_frm.add_fetch("customer", "nit_face_customer", "nit_face_customer");

    if (frm.doc.status === "Paid" || frm.doc.status === "Unpaid" || frm.doc.status === "Submitted" || frm.doc.status === "Overdue") {
        if (frm.doc.cae_factura_electronica) {
            cur_frm.clear_custom_buttons();
            pdf_button();
        } else {
            var nombre = 'Factura Electronica';
            frm.add_custom_button(__(nombre), function () {
                frappe.call({
                    method: "factura_electronica.api.generar_factura_electronica",
                    args: {
                        serie_factura: frm.doc.name,
                        nombre_cliente: frm.doc.customer
                    },

                    callback: function callback(data) {
                        cur_frm.set_value("cae_factura_electronica", data.message);
                        if (frm.doc.cae_factura_electronica) {
                            cur_frm.clear_custom_buttons();
                            pdf_button();
                        }
                    }
                });
            }).addClass("btn-primary");
        }
    }

    function pdf_button() {
        console.log('Se ejecuto la funcion demas');
        frappe.call({
            method: "factura_electronica.api.save_url_pdf",
            callback: function callback(data) {
                console.log(data.message);
                if (data.message === 'Manual') {

                    frm.add_custom_button(__("Obtener PDF"), function () {
                        var cae_fac = frm.doc.cae_factura_electronica;
                        var link_cae_pdf = "https://www.ingface.net/Ingfacereport/dtefactura.jsp?cae=";

                        window.open(link_cae_pdf + cae_fac);
                    }).addClass("btn-primary");
                } else {}
            }
        });
    }

    if (frm.doc.status === "Return") {
        if (frm.doc.cae_nota_de_credito) {
            cur_frm.clear_custom_buttons();
            pdf_button();
        } else {
            frm.add_custom_button(__('Nota Credito'), function () {
                frappe.call({
                    method: "factura_electronica.api.generar_factura_electronica",
                    args: {
                        serie_factura: frm.doc.name,
                        nombre_cliente: frm.doc.customer
                    },

                    callback: function callback(data) {
                        cur_frm.set_value("cae_nota_de_credito", data.message);
                        if (frm.doc.cae_nota_de_credito) {
                            cur_frm.clear_custom_buttons();
                            pdf_button();
                        }
                    }
                });
            }).addClass("btn-primary");
        }
    }
});